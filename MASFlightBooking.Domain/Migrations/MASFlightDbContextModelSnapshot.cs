// <auto-generated />
using System;
using MASFlightBooking.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MASFlightBooking.Domain.Migrations
{
    [DbContext(typeof(MASFlightDbContext))]
    partial class MASFlightDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MASFlightBooking.Domain.Models.AirlineModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Airline")
                        .HasColumnType("int");

                    b.Property<string>("AirlineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Airlines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c7e9c5d-89ae-43d9-8f19-feb71af65e8f"),
                            Airline = 0,
                            AirlineName = "Dana Air",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(4981),
                            DeletedBy = "",
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("6283d2df-ca2c-4d6f-bd2d-5cf48d317345"),
                            Airline = 4,
                            AirlineName = "Air France",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5027),
                            DeletedBy = "",
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("cae5c97e-a07c-4656-9fa9-c6b8feb19019"),
                            Airline = 1,
                            AirlineName = "IRS",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5061),
                            DeletedBy = "",
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("14cf20ec-4426-4059-960e-9c42f8b19e9e"),
                            Airline = 3,
                            AirlineName = "MAS AIr",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5092),
                            DeletedBy = "",
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("62f8ab72-f871-4add-ae73-3f9b5b22d329"),
                            Airline = 2,
                            AirlineName = "Ibom AIr",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5123),
                            DeletedBy = "",
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.FlightCategoryModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountPerSeat")
                        .HasColumnType("float");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightCategory")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FlightCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73c5bcba-65b6-46a3-897f-7d67fc0480b8"),
                            AmountPerSeat = 50000.5,
                            CategoryName = "Business",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5296),
                            DeletedBy = "",
                            FlightCategory = 3,
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("f551bb7b-617b-4e56-9a7a-54358b4b9d38"),
                            AmountPerSeat = 123000.5,
                            CategoryName = "Premium",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5336),
                            DeletedBy = "",
                            FlightCategory = 1,
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("759b4322-8282-4758-8479-db06b6d4030c"),
                            AmountPerSeat = 35800.5,
                            CategoryName = "Economy",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5370),
                            DeletedBy = "",
                            FlightCategory = 0,
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("185337b9-474e-49ae-8eff-f8ac0e4c65f7"),
                            AmountPerSeat = 210000.5,
                            CategoryName = "First Class",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5402),
                            DeletedBy = "",
                            FlightCategory = 2,
                            IsDeleted = false,
                            ModifiedBy = "",
                            Status = 1
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.MASFlightBookingModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AirlineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Departure")
                        .HasColumnType("int");

                    b.Property<int>("Destination")
                        .HasColumnType("int");

                    b.Property<Guid>("FlightCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PassangerInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TripType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("FlightCategoryId");

                    b.HasIndex("PassangerInfoId");

                    b.ToTable("MASFlights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("43738933-acf0-4479-8624-0ef1bec0383d"),
                            AirlineId = new Guid("6c7e9c5d-89ae-43d9-8f19-feb71af65e8f"),
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(4650),
                            DeletedBy = "",
                            Departure = 0,
                            Destination = 0,
                            FlightCategoryId = new Guid("73c5bcba-65b6-46a3-897f-7d67fc0480b8"),
                            FlightDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            ModifiedBy = "",
                            PassangerInfoId = new Guid("923a643a-9c41-464e-9fe3-29656c34e589"),
                            TotalCost = 0m,
                            TripType = 0
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.NextOfKin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationhsip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NextOfKin");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ffe12ec-ea61-4e47-8a5c-e753a5fe2823"),
                            Address = "Abule egba ",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5248),
                            DeletedBy = "",
                            IsDeleted = false,
                            ModifiedBy = "",
                            Name = "Mustapha Lateefat",
                            PhoneNumber = "08084491078"
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.PassangerInfoModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaturityLevel")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NextOfKinId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("PassangerInfos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("923a643a-9c41-464e-9fe3-29656c34e589"),
                            Address = "Abule egba ",
                            CreatedBy = "",
                            CreatedOn = new DateTime(2023, 5, 29, 21, 33, 4, 775, DateTimeKind.Local).AddTicks(5192),
                            DeletedBy = "",
                            Email = "ayisatabiodun@gmail.com",
                            IsDeleted = false,
                            MaturityLevel = 0,
                            ModifiedBy = "",
                            Name = "Mustapha Akeem",
                            NextOfKinId = new Guid("0ffe12ec-ea61-4e47-8a5c-e753a5fe2823"),
                            PhoneNumber = "08084491078"
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppRoles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInBuilt")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("69d545c8-b65e-4fff-82ac-bce73ac289a3"),
                            ConcurrencyStamp = "1",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsInBuilt = false,
                            Name = "User",
                            NormalizedName = "User"
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserRoles", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUsers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPasswordDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("51c46a0d-49f4-49c0-9db2-77e1caac484d"),
                            AccessFailedCount = 0,
                            Activated = false,
                            ConcurrencyStamp = "4552f06b-e2a5-4821-b403-59ed552829da",
                            CreatedOn = new DateTime(2023, 5, 29, 20, 33, 4, 775, DateTimeKind.Utc).AddTicks(5488),
                            DeletedOn = new DateTime(2023, 5, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Email = "akeem234@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Akeem",
                            Gender = 0,
                            IsDeleted = false,
                            IsPasswordDefault = false,
                            LastLoginDate = new DateTime(2023, 5, 29, 20, 33, 4, 775, DateTimeKind.Utc).AddTicks(5438),
                            LastName = "Mustapha",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEPOrjpJ2Bk2mlKQDwk98phL3OqtNl+wAYLcdv0IkyJlpPzm+kHKQdzYD1D11d1NGhw==",
                            PhoneNumber = "08055423378",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserType = 0
                        });
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.MASFlightBookingModel", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.AirlineModel", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFlightBooking.Domain.Models.FlightCategoryModel", "FlightCategory")
                        .WithMany()
                        .HasForeignKey("FlightCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFlightBooking.Domain.Models.PassangerInfoModel", "PassangerInfo")
                        .WithMany()
                        .HasForeignKey("PassangerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Airline");

                    b.Navigation("FlightCategory");

                    b.Navigation("PassangerInfo");
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.PassangerInfoModel", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.NextOfKin", "NextOfKin")
                        .WithMany()
                        .HasForeignKey("NextOfKinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NextOfKin");
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppRoleClaim", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.UserIdentityModel+AppRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserClaim", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.UserIdentityModel+AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserLogin", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.UserIdentityModel+AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserRoles", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.UserIdentityModel+AppRoles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MASFlightBooking.Domain.Models.UserIdentityModel+AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MASFlightBooking.Domain.Models.UserIdentityModel+AppUserToken", b =>
                {
                    b.HasOne("MASFlightBooking.Domain.Models.UserIdentityModel+AppUsers", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
